version: '2.1'

services:
  zoo-compose-container:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zoo-compose-container
    container_name: zoo-compose-container-2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo-compose-container:2888:3888

  kafka-compose-container:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka-compose-container
    container_name: kafka-compose-container-2
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-compose-container:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo-compose-container:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      TOPIC_AUTO_CREATE: true
    depends_on:
      -   zoo-compose-container
  zipkin-compose-container:
    image: openzipkin/zipkin
    hostname: zipkin-compose-container
    container_name: zipkin-compose-container-2
    ports:
      - "9411:9411"

#  mongo-compose-container:
#    container_name: mongo-compose-container-2
#    image: mongo
#    restart: always
#    environment:
#      MONGO_INITDB_DATABASE: cs590
##      MONGO_INITDB_ROOT_USERNAME: root
##      MONGO_INITDB_ROOT_PASSWORD: mongo-root
#    ports:
#      - "27017:27017"

#  kafka-magic-compose-container:
#    image: digitsy/kafka-magic
#    hostname: kafka-magic-compose-container
#    container_name: kafka-magic-compose-container
#    ports:
#      - "8080:80"
#    volumes:
#      - ./config:/config
#    environment:
#      KMAGIC_ALLOW_TOPIC_DELETE: "true"
#      KMAGIC_ALLOW_SCHEMA_DELETE: "true"
#      KMAGIC_CONFIG_STORE_TYPE: "file"
#      KMAGIC_CONFIG_STORE_CONNECTION: "Data Source=/config/KafkaMagicConfig.db;"
#      KMAGIC_CONFIG_ENCRYPTION_KEY: "ENTER_YOUR_KEY_HERE"
#    depends_on:
#      - kafka-compose-container